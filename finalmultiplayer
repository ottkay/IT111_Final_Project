import tkinter as tk
from tkinter import Label, Button
from PIL import Image, ImageTk
import random

# ----------------------- Game Logic -----------------------
def determine_winner(player1, player2):
    if player1 == player2:
        return "It's a Tie!"
    elif (player1 == "rock" and player2 == "scissors") or \
         (player1 == "scissors" and player2 == "paper") or \
         (player1 == "paper" and player2 == "rock"):
        return "Player 1 Wins!"
    else:
        return "Player 2 Wins!"

# ----------------------- GUI Setup -----------------------
root = tk.Tk()
root.title("Rock Paper Scissors")
root.geometry("800x600")
root.configure(bg='white')

# Load images
rock_img = ImageTk.PhotoImage(Image.open("images/rock.png").resize((150, 150)))
paper_img = ImageTk.PhotoImage(Image.open("images/paper.png").resize((150, 150)))
scissors_img = ImageTk.PhotoImage(Image.open("images/scissors.png").resize((150, 150)))

# Image map for cleaner code
image_map = {
    "rock": rock_img,
    "paper": paper_img,
    "scissors": scissors_img
}

# Layout configuration
for i in range(5):  # Added one more row for the "Play Again" button
    root.grid_rowconfigure(i, weight=1)
for i in range(3):
    root.grid_columnconfigure(i, weight=1)

# Labels
Label(root, text="Your Choice", font=("Helvetica", 18, "bold"), bg='white').grid(row=0, column=1, pady=10)
player1_img = Label(root, image=rock_img, bg='white')
player1_img.grid(row=1, column=0, padx=30)
player2_img = Label(root, image=paper_img, bg='white')
player2_img.grid(row=1, column=2, padx=30)
result_label = Label(root, text="Result: ", font=("Helvetica", 18), bg='white', fg='blue')
result_label.grid(row=2, column=1, pady=20)

# Score labels
player1_score_label = Label(root, text="Player 1: 0", font=("Helvetica", 16), bg='white')
player1_score_label.grid(row=3, column=0)
player2_score_label = Label(root, text="Player 2: 0", font=("Helvetica", 16), bg='white')
player2_score_label.grid(row=3, column=2)

# Score trackers
player1_score = 0
player2_score = 0

# ----------------------- Game Functions -----------------------
def update_scores(winner):
    global player1_score, player2_score
    if "Player 1 Wins" in winner:
        player1_score += 1
    elif "Player 2 Wins" in winner:
        player2_score += 1
    player1_score_label.config(text=f"Player 1: {player1_score}")
    player2_score_label.config(text=f"Player 2: {player2_score}")

def play_single(choice):
    computer = random.choice(["rock", "paper", "scissors"])

    player1_img.config(image=image_map[choice])
    player2_img.config(image=image_map[computer])

    result = determine_winner(choice, computer).replace("Player 1", "You").replace("Player 2", "Computer")
    result_label.config(text=f"Computer: {computer.capitalize()} | {result}")
    update_scores(result)

def play_multiplayer(player1_choice):
    def player2_choice_handler(player2_choice):
        player1_img.config(image=image_map[player1_choice])
        player2_img.config(image=image_map[player2_choice])

        result = determine_winner(player1_choice, player2_choice)
        result_label.config(text=f"Player 2: {player2_choice.capitalize()} | {result}")
        update_scores(result)
        show_play_again_button()

    # Prompt Player 2 after Player 1 chooses
    Button(root, text="Rock", command=lambda: player2_choice_handler("rock"), width=12, height=2).grid(row=4, column=0, pady=20, padx=10)
    Button(root, text="Paper", command=lambda: player2_choice_handler("paper"), width=12, height=2).grid(row=4, column=1, pady=20, padx=10)
    Button(root, text="Scissors", command=lambda: player2_choice_handler("scissors"), width=12, height=2).grid(row=4, column=2, pady=20, padx=10)

def show_play_again_button():
    Button(root, text="Play Again", command=choose_mode, width=16, height=3).grid(row=5, column=1, pady=20)

def choose_mode():
    def start_single_player():
        # Buttons for single-player
        Button(root, text="Rock", command=lambda: play_single("rock"), width=12, height=2).grid(row=4, column=0, pady=20, padx=10)
        Button(root, text="Paper", command=lambda: play_single("paper"), width=12, height=2).grid(row=4, column=1, pady=20, padx=10)
        Button(root, text="Scissors", command=lambda: play_single("scissors"), width=12, height=2).grid(row=4, column=2, pady=20, padx=10)
        show_play_again_button()

    def start_multiplayer():
        # Buttons for multiplayer
        Button(root, text="Rock", command=lambda: play_multiplayer("rock"), width=12, height=2).grid(row=4, column=0, pady=20, padx=10)
        Button(root, text="Paper", command=lambda: play_multiplayer("paper"), width=12, height=2).grid(row=4, column=1, pady=20, padx=10)
        Button(root, text="Scissors", command=lambda: play_multiplayer("scissors"), width=12, height=2).grid(row=4, column=2, pady=20, padx=10)

    # Mode selection buttons
    Button(root, text="Single Player", command=start_single_player, width=16, height=3).grid(row=3, column=0, pady=20, padx=10)
    Button(root, text="Multiplayer", command=start_multiplayer, width=16, height=3).grid(row=3, column=2, pady=20, padx=10)

# Initial mode selection
choose_mode()

# Start the app
root.mainloop()
